#! /usr/bin/env ruby

require 'pg'
require 'pry'
require 'rb-readline'
require 'io/console'

class CLI
  def initialize
    @application = ExpenseData.new
  end

  def run(input)
    case input[0]
    when 'list'
      @application.list
    when 'add'
      @application.add(input)
    when 'search'
      @application.search(input)
    when 'delete'
      @application.delete(input)
    when 'clear'
      puts "This will remove all expenses. Are you sure? (y/n)"
      response = STDIN.getch
      @application.clear if response.downcase == "y"
    else
      help
    end
  end

  def help
    puts <<~HELP
      
      An expense recording system

      Commands:

      add AMOUNT MEMO [DATE] - record a new expense
      clear - delete all expenses
      list - list all expenses
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a matching memo field
      
    HELP
  end 
end

class ExpenseData
  def initialize
    @connection = PG.connect(dbname: 'expenses')
  end

  def add(input)
    if (!(input[1] && input[2])) 
      puts "You must provide an amount and memo."
      return
    end
    sql = "INSERT INTO expenses (amount, memo) VALUES ($1, $2);"
    return @connection.exec_params(sql, [input[1], input[2]])
  end

  def search(input)
    sql = "SELECT * FROM expenses WHERE memo ~*($1)"
    result = @connection.exec_params(sql, [input[1]])
    print_result(result)
  end

  def delete(input)
    db = PG.connect(dbname: 'expenses')
    check_sql = "SELECT * FROM expenses WHERE id = $1"
    check_result = @connection.exec_params(check_sql, [input[1]])

    if check_result.values.length === 0
      puts "\nThere is no expense with the id '#{input[1]}'\n\n"
      return
    end

    sql = "DELETE FROM expenses WHERE id = $1"
    @connection.exec_params(sql, [input[1]])
    puts "\nThe following expense has been deleted:\n"
    print_result(check_result)
  end

  def clear

    delete_all_expenses
  end

  def delete_all_expenses
    sql = "DELETE FROM expenses"
    @connection.exec(sql)
    puts "All expenses have been deleted."
  end

  def list
    result = get_list_result
    print_result(result)
  end

  def print_result(result)
    puts ''
    print_line(result.fields)
    puts '-----+------------+--------+--------------'
    result.values.each {|tuple| print_line(tuple)}
    puts ''
  end

  def get_list_result
    return @connection.exec_params('SELECT * FROM expenses;')
  end

  def print_line(line_elements)
    print line_elements[0].rjust(4) + ' |'
    print line_elements[3].rjust(11) + ' |'
    print line_elements[1].rjust(7) + ' |'
    print ' ' + line_elements[2] + "\n"
  end
end

CLI.new.run(ARGV)